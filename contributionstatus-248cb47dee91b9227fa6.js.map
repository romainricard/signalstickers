{"version":3,"sources":["webpack:///src/components/contributionstatus/ContributionStatus.tsx","webpack:///./.linaria-cache/src/components/contributionstatus/ContributionStatus.linaria.css"],"names":["ContributionStatus","initialValues","signalArtUrl","validators","RegExp","ContributionStatusComponent","packInfo","setPackInfo","error","pack_id","pack_title","status","status_comments","onSubmit","values","setSubmitting","matches","Error","packId","packKey","fetch","method","headers","body","JSON","pack_key","async","response","data","res","window","top","document","behavior","className","to","isSubmitting","noValidate","cx","errors","htmlFor","type","id","name","validate","placeholder","disabled"],"mappings":"qXAsBA,MAAMA,EAAkB,gEAuBlBC,EAA4B,CAChCC,aAAc,IAMVC,EAA6C,CACjDD,aAAc,IACZ,MACE,gCAIF,OADgB,IAAIE,OAAO,EAAX,QAAhB,QACA,EACE,4BAQAC,EAAuD,KAC3D,MAAOC,EAAUC,GAAe,aAAe,CAC7CC,MAD6C,GAE7CC,QAF6C,GAG7CC,WAH6C,GAI7CC,OAJ6C,GAK7CC,gBAAiB,KAQbC,EAAW,gBAAkB,CAACC,GAAsBC,oBACxD,MAAMC,EAAU,IAAIZ,OAAO,EAAX,QAAwCU,EAAxD,cACA,MACE,MAAM,IAAIG,MAAV,+DAGF,MAAO,CAAEC,EAAQC,GAAjB,EAEKC,MAAM,EAAD,EAAiB,CACzBC,OADyB,OAEzBC,QAAS,CACP,OADO,oCAEP,eAAgB,oBAElBC,KAAMC,KAAA,UAAe,CACnBf,QADmB,EAEnBgB,SAAUN,MART,KAUGO,SACNC,EAAA,YAAqBC,IAAQ,CAC3BA,KAD4B,EAE5BjB,OAAQgB,EAAShB,UAFnB,KAIOkB,IACLtB,EAAYsB,EAAZtB,MACAQ,MACAe,gBAAgB,CACdC,IAAKC,cADS,aAEdC,SAAU,eAGf,CA7C8D,IAkDjE,OACE,qBAAoBC,UAApB,uBACE,yBAAKA,UAAL,OACE,yBAAKA,UAAL,UACE,wBAAIA,UAAJ,+BACA,uBAAGA,UAAH,qIAKJ,wBAAIA,UAAJ,cAEE5B,SACA,yBAAK4B,UAAL,OACE,yBAAKA,UAAL,UACE,uBAAGA,UAAH,gBACE,oCADF,IACgB5B,EAAD,SAMnBA,UACA,yBAAK4B,UAAL,OACE,yBAAKA,UAAL,UACE,uBAAGA,UAAH,6BAEY,2BAAI5B,EAAD,YACZA,qBACC,2CAAM,wCAAN,KAAwB,0BAAM6B,GAAK,SAAQ7B,EAASG,SAA5B,mBAGzBH,wBACC,2CADF,8CACE,qCAGDA,sBACC,4CADF,iDACE,KAEDA,mBACC,mEAA8B,4BAAKA,EADrC,qBASR,yBAAK4B,UAAL,OACE,yBAAKA,UAAL,gCACE,uBACEjC,cADF,EAEEY,SAAU,CAACC,GAAQ,YAAaC,mBAAoBF,EAASC,EAAQ,aAAaC,mBAClF,EAAC,wBAAwBqB,kBACzB,uBAAMC,YAAN,GAGE,yBAAKH,UAAL,cACE,yBAAKA,UAAL,YACE,2BAAOA,UAAWI,YAAG,SAAUC,gBAA/B,eAAsEC,QAAtE,oCAEE,uBACEC,KADF,OAEEC,GAFF,iBAGEC,KAHF,eAIEC,SAAUzC,EAJZ,aAKE+B,UAAWI,YAAG,eAAgB,OAAQC,gBALxC,cAMEM,YANF,oFAQA,yBAAKX,UAAL,oBACE,uBAAcS,KAAd,iBADF,QAQN,yBAAKT,UAAL,cACE,yBAAKA,UAAL,YACE,yBAAKA,UAAL,UACE,4BACEO,KADF,SAEEP,UAFF,mCAGEY,SAAUV,GAHZ,GAKGA,EAAY,6CAAb,8CAIA,Y,EA3IhB/B,E,6KA2JN,E,QAAe,Y,qGAzMTL,E,4IAuBAC,E,uIAOAE,E,oIAgBAE,E,gaCpEN","file":"contributionstatus-248cb47dee91b9227fa6.js","sourcesContent":["import {\n  Formik,\n  Form,\n  Field,\n  ErrorMessage,\n  FieldValidator\n} from 'formik';\nimport { cx } from 'linaria';\nimport { styled } from 'linaria/react';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { SIGNAL_ART_URL_PATTERN, API_URL_STATUS } from 'etc/constants';\n\n\n/**\n * Test pack:\n * https://signal.art/addstickers/#pack_id=b2e52b07dfb0af614436508c51aa24eb&pack_key=66224990b3e956ad4a735830df8cd071275afeae79db9797e57d99314daffc77\n */\n\n\n// ----- Styles ----------------------------------------------------------------\n\nconst ContributionStatus = styled.div`\n  /**\n   * Ensures error feedback containers are always visible (even if empty) so\n   * that controls do not jump around as they move between valid and invalid\n   * states.\n   */\n  & .invalid-feedback {\n    display: block;\n  }\n`;\n\n// ----- Types -----------------------------------------------------------------\n\nexport interface FormValues {\n  signalArtUrl: string;\n}\n\n\n// ----- Locals ----------------------------------------------------------------\n\n/**\n * Initial values for the form.\n */\nconst initialValues: FormValues = {\n  signalArtUrl: ''\n};\n\n/**\n * Validators for each field in our form.\n */\nconst validators: Record<string, FieldValidator> = {\n  signalArtUrl: (signalArtUrl: string) => {\n    if (!signalArtUrl) {\n      return 'This field is required.';\n    }\n\n    const matches = new RegExp(SIGNAL_ART_URL_PATTERN).exec(signalArtUrl);\n    if (!matches) {\n      return 'Invalid signal.art URL.';\n    }\n  }\n};\n\n\n// ----- Component -------------------------------------------------------------\n\nconst ContributionStatusComponent: React.FunctionComponent = () => {\n  const [packInfo, setPackInfo] = React.useState({\n    error: '',\n    pack_id: '',\n    pack_title: '',\n    status: '',\n    status_comments: ''\n  }\n  );\n\n\n  /**\n   * Called when the form is submitted and has passed validation.\n   */\n  const onSubmit = React.useCallback((values: FormValues, { setSubmitting }) => {\n    const matches = new RegExp(SIGNAL_ART_URL_PATTERN).exec(values.signalArtUrl);\n    if (!matches) {\n      throw new Error('Unable to extract pack ID and pack key from signal.art URL.');\n    }\n\n    const [, packId, packKey] = matches;\n\n    void fetch(API_URL_STATUS, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        pack_id: packId,\n        pack_key: packKey\n      })\n    }).then(async response =>\n      response.json().then(data => ({\n        data: data,\n        status: response.status\n      })\n      ).then(res => {\n        setPackInfo(res.data);\n        setSubmitting(false);\n        window.scrollTo({\n          top: document.body.scrollHeight,\n          behavior: 'smooth'\n        });\n      }));\n  }, [packInfo]);\n\n\n  // ----- Render --------------------------------------------------------------\n\n  return (\n    <ContributionStatus className=\"my-4 p-lg-3 px-lg-4\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h1 className=\"mb-4\">Contribution status</h1>\n          <p className=\"mt-lg-3 mb-4\">\n            If you proposed a pack via the Contribute page, you can use this form to check the status of your contribution!\n          </p>\n        </div>\n      </div>\n      <hr className=\"pt-3 pb-2\" />\n\n      { packInfo.error &&\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <p className=\"mt-lg-3 mb-4\">\n              <b>Oops!</b> {packInfo.error}\n            </p>\n          </div>\n        </div>\n      }\n\n      { packInfo.status &&\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <p className=\"mt-lg-3 mb-4\">\n\n              Your pack <b>{packInfo.pack_title}</b>\n              {packInfo.status === 'ONLINE' &&\n                <> is <b>published</b>! <Link to={`/pack/${packInfo.pack_id}`}>Check it here.</Link></>\n              }\n\n              {packInfo.status === 'IN_REVIEW' &&\n                <> is <b>still in review</b>! Real humans will soon check it.</>\n              }\n\n              {packInfo.status === 'REFUSED' &&\n                <> has <b>not been published</b>.</>\n              }\n              {packInfo.status_comments &&\n                <> Moderators left a comment: <em>{packInfo.status_comments}</em></>\n              }\n\n            </p>\n          </div>\n        </div>\n      }\n\n      <div className=\"row\">\n        <div className=\"col-12 col-md-10 offset-md-1\">\n          <Formik\n            initialValues={initialValues}\n            onSubmit={(values, { setErrors, setSubmitting }) => onSubmit(values, { setErrors, setSubmitting })}\n          >{({ errors, isValidating, isSubmitting }) => (\n            <Form noValidate>\n\n              {/* [Field] Signal.art Url */}\n              <div className=\"form-group\">\n                <div className=\"form-row\">\n                  <label className={cx('col-12', errors.signalArtUrl && 'text-danger')} htmlFor=\"signal-art-url\">\n                    Signal.art URL:\n                    <Field\n                      type=\"text\"\n                      id=\"signal-art-url\"\n                      name=\"signalArtUrl\"\n                      validate={validators.signalArtUrl}\n                      className={cx('form-control', 'mt-2', errors.signalArtUrl && 'is-invalid')}\n                      placeholder=\"https://signal.art/addstickers/#pack_id=<your pack id>&pack_key=<your pack key>\"\n                    />\n                    <div className=\"invalid-feedback\">\n                      <ErrorMessage name=\"signalArtUrl\" />&nbsp;\n                    </div>\n                  </label>\n                </div>\n              </div>\n\n              {/* [Control] Submit*/}\n              <div className=\"form-group\">\n                <div className=\"form-row\">\n                  <div className=\"col-12\">\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-block btn-lg btn-primary\"\n                      disabled={isSubmitting || isValidating}\n                    >\n                      {isSubmitting ?\n                        <span>Checking...</span>\n                        : <span>Check status</span>\n                      }\n                      {isSubmitting}\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n            </Form>\n          )}\n          </Formik>\n        </div>\n      </div>\n    </ContributionStatus>\n  );\n};\n\n\nexport default ContributionStatusComponent;\n","// extracted by mini-css-extract-plugin\nexport {};"],"sourceRoot":""}